name: Build proxy docker image
on:
  workflow_dispatch:
    inputs:
      full_test_suite:
        required: true
      neon_evm_commit:
        required: true
      neon_evm_branch:
        required: true
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    tags:
      - "*"
env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  BUILD_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

jobs:
  build-image:
    runs-on: build-runner
    outputs:
      proxy_tag: ${{ steps.tags.outputs.proxy }}
      neon_evm_tag: ${{ steps.tags.outputs.neon_evm }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6
      - name: Define images tags
        id: tags
        run: |
          if [[ "${{ github.event.inputs.neon_evm_branch }}" =~ "refs/tags/".* ]]; then
            neon_evm_tag=`echo "${{ github.event.inputs.neon_evm_branch }}" | sed 's/refs\/tags\///g'` 
          else
            neon_evm_tag=${{ github.event.inputs.neon_evm_commit }}
          fi;
          echo "neon_evm=${neon_evm_tag:-'latest'}" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF}" =~ "refs/tags/".* ]]; then
            proxy_tag=`echo "${GITHUB_REF}" | sed 's/refs\/tags\///g'`
          else
            proxy_tag=${GITHUB_SHA}
          fi;
          echo "proxy=$proxy_tag" >> $GITHUB_OUTPUT
      - name: Build docker image
        if: ${{ !startsWith(github.event.inputs.neon_evm_branch , 'refs/tags') }}
        run: |
          python3 ./.github/workflows/deploy.py build_docker_image \
          --github_sha=${GITHUB_SHA} \
          --neon_evm_tag=${{ steps.tags.outputs.neon_evm }} \
          --proxy_tag=${{ steps.tags.outputs.proxy }}
      - name: Publish image
        if: ${{ !startsWith(github.event.inputs.neon_evm_branch, 'refs/tags/') }}
        run: |
          python3 ./.github/workflows/deploy.py publish_image \
          --github_sha=${GITHUB_SHA}
  deploy-check:
    needs:
      - build-image
    runs-on: build-runner
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - name: deploy_check
        run: |
          python3 ./.github/workflows/deploy.py deploy_check \
          --proxy_tag=${{ needs.build-image.outputs.proxy_tag }} \
          --neon_evm_tag=${{ needs.build-image.outputs.neon_evm_tag }}
      - name: Dump docker logs
        if: always()
        run: python3 ./.github/workflows/deploy.py dump_apps_logs
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Docker logs
          path: ./*.log
  openzeppelin-tests:
    if: ${{ (github.base_ref =='develop' && ! github.event.pull_request.draft) || github.event.inputs.full_test_suite }}
    needs:
      - build-image
    runs-on: test-runner
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true"
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6
      - name: Add private key
        run: |
          echo "${{ secrets.CI_STANDS_KEY }}" > ${HOME}/.ssh/ci-stands
          chmod 644 ${HOME}/.ssh/ci-stands
      - name: Terraform build infra structure
        run: |
          python3 ./.github/workflows/deploy.py terraform_infrastructure \
            --branch=${{ steps.branch-name.outputs.head_ref_branch }} \
            --github_sha=${GITHUB_SHA} \
            --neon_evm_tag=${{ needs.build-image.outputs.neon_evm_tag }} \
            --proxy_tag=${{ needs.build-image.outputs.proxy_tag }} \
            --run_number=${GITHUB_RUN_NUMBER}

      - name: Run openzeppelin tests
        run: python3 ./.github/workflows/deploy.py openzeppelin --run_number=${GITHUB_RUN_NUMBER}

      - name: Destroy terraform infrastructure
        if: ${{always() && ((github.base_ref =='develop' && ! github.event.pull_request.draft) || github.event.inputs.full_test_suite)}}
        run: |
          python3 ./.github/workflows/deploy.py destroy_terraform \
          --run_number=${GITHUB_RUN_NUMBER} \
          --github_sha=${GITHUB_SHA}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: FTS allure report
          path: allure-reports.tar.gz
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: FTS docker logs
          path: ./logs/*
  finalize-image:
    runs-on: build-runner
    needs:
      - openzeppelin-tests
      - deploy-check
    steps:
      - uses: actions/checkout@v3
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6
      - name: Tag published image
        if: ${{ !startsWith(github.event.inputs.neon_evm_branch , 'refs/tags/') }}
        run: |
          python3 ./.github/workflows/deploy.py finalize_image \
          --head_ref_branch=${{ steps.branch-name.outputs.head_ref_branch }} \
          --github_ref=${GITHUB_REF} \
          --base_ref_branch=${{ steps.branch-name.outputs.base_ref_branch }} \
          --github_sha=${GITHUB_SHA}
  notification:
    runs-on: build-runner
    if: failure()
    needs:
      - finalize-image
      - openzeppelin-tests
      - deploy-check
    steps:
      - uses: actions/checkout@v3
      - name: Send notification to slack
        run: |
          python3 ./.github/workflows/deploy.py send_notification \
          --url=${{secrets.SLACK_PROXY_CHANNEL_URL}} \
          --build_url=${BUILD_URL}
