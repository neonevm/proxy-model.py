version: "3"

services:
  solana:
    container_name: solana
    image: neonlabsorg/solana:${SOLANA_REVISION:-v1.7.9-resources}
    environment:
      SOLANA_URL: http://solana:8899
      RUST_LOG: solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=debug,solana_bpf_loader=debug,solana_rbpf=debug
    hostname: solana
    expose:
      - "8899"
      - "9900"
      - "8900"
      - "8001"
      - "8001-8009/udp"
    networks:
      - net

  evm_loader:
    container_name: evm_loader
    image: neonlabsorg/evm_loader:${EVM_LOADER_REVISION:-latest}
    environment:
      - SOLANA_URL=http://solana:8899
      - CONFIG=ci
    volumes:
      - deployment_data:/var/deployment_data
    networks:
      - net
    command: >
       bash -c "wait-for-solana.sh 50
       && create-test-accounts.sh 1
       && deploy-evm.sh
       && cp evm_loader_id /var/deployment_data/
       && cp evm_loader-keypair.json /var/deployment_data/"

  postgres:
    container_name: postgres
    image: postgres:14.0
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
    hostname: postgres
    expose:
      - "5432"
    networks:
      - net

  proxy:
    container_name: proxy
    image: neonlabsorg/proxy:${REVISION}
    environment:
      SOLANA_URL: http://solana:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      NEW_USER_AIRDROP_AMOUNT: 100
      CONFIG: ci
    hostname: proxy
    depends_on:
      postgres:
        condition: service_started
      evm_loader:
        condition: service_completed_successfully
    ports:
      - 127.0.0.1:9090:9090
    expose:
      - "9090"
    networks:
      - net
    volumes:
      - deployment_data:/var/deployment_data
    entrypoint: proxy/run-test-proxy.sh

networks:
  net:

volumes:
  # provides data interchange between evm_loader and proxy
  deployment_data:

