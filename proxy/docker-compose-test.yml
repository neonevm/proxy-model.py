version: "3"

services:
  solana:
    container_name: solana
    image: neonlabsorg/solana:${SOLANA_REVISION:-v1.9.12-testnet-with_trx_cap}
    environment:
      SOLANA_URL: http://solana:8899
      RUST_LOG: solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=debug,solana_bpf_loader=debug,solana_rbpf=debug
    hostname: solana
    expose:
      - "8899"
      - "9900"
      - "8900"
      - "8001"
      - "8001-8009/udp"
    networks:
      - net
    healthcheck:
      # Must be available from outside (calling without -u causes premature result)
      test: [ CMD-SHELL, "solana cluster-version -u http://solana:8899" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  evm_loader:
    container_name: evm_loader
    image: neonlabsorg/evm_loader:${NEON_EVM_COMMIT:-latest}
    environment:
      - SOLANA_URL=http://solana:8899
    networks:
      - net
    depends_on:
      solana:
        condition: service_healthy
    command: bash -c "create-test-accounts.sh 1 && deploy-evm.sh"

  postgres:
    container_name: postgres
    image: postgres:14.0
    command: postgres -c 'max_connections=1000'
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
    hostname: postgres
    healthcheck:
      test: [ CMD-SHELL, "pg_isready -h postgres -p 5432" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 5s
    expose:
      - "5432"
    ports:
      - "5432"
    networks:
      - net

  dbcreation:
    container_name: dbcreation
    image: neonlabsorg/proxy:${REVISION}
    environment:
      SOLANA_URL: http://solana:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
    entrypoint: proxy/run-dbcreation.sh
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
      evm_loader:
        condition: service_completed_successfully

  proxy:
    container_name: proxy
    image: neonlabsorg/proxy:${REVISION}
    environment:
      SOLANA_URL: http://solana:8899
      FAUCET_URL: http://faucet:3333
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      LOG_SENDING_SOLANA_TRANSACTION: "YES"
      LOG_NEON_CLI_DEBUG: "YES"
      FUZZING_BLOCKHASH: "YES"
      CONFIG: ci
      PP_SOLANA_URL: ${CI_PP_SOLANA_URL:-https://api.devnet.solana.com}
      PYTH_MAPPING_ACCOUNT: ${CI_PYTH_MAPPING_ACCOUNT:-BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2}
      MIN_OPERATOR_BALANCE_TO_WARN: 4565760000 # = 913152000 * 5 (5 storage accounts) = 4.56576 SOL
      MIN_OPERATOR_BALANCE_TO_ERR: 913152000 # = solana rent 131072 (= Rent-exempt minimum: 0.913152 SOL) SOLs to create a storage
      MINIMAL_GAS_PRICE: 1
      ENABLE_PRIVATE_API: "YES"
    hostname: proxy
    depends_on:
      dbcreation:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
      evm_loader:
        condition: service_completed_successfully
      indexer:
        condition: service_started
    ports:
      - 127.0.0.1:9090:9090
    expose:
      - "8888"
      - "9090"
    networks:
      - net
    entrypoint: proxy/run-test-proxy.sh

  faucet:
    container_name: faucet
    image: neonlabsorg/faucet:latest
    environment:
      FAUCET_RPC_PORT: 3333
      FAUCET_RPC_ALLOWED_ORIGINS: '["http://airdropper"]'
      FAUCET_WEB3_ENABLE: 'false'
      FAUCET_SOLANA_ENABLE: 'true'
      SOLANA_URL: 'http://solana:8899'
      NEON_OPERATOR_KEYFILE: '/root/.config/solana/id.json'
      NEON_ETH_MAX_AMOUNT: 1000
      TEST_FAUCET_INIT_NEON_BALANCE: 100000
    hostname: faucet
    ports:
      - 3333
    expose:
      - "3333"
    networks:
      - net
    entrypoint: ./run-test-faucet.sh
    depends_on:
      proxy:
        condition: service_started

  airdropper:
    container_name: airdropper
    image: neonlabsorg/proxy:${REVISION}
    environment:
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      POSTGRES_HOST: postgres
      SOLANA_URL: http://solana:8899
      FAUCET_URL: http://faucet:3333
      NEON_CLI_TIMEOUT: 0.9
      INDEXER_ERC20_WRAPPER_WHITELIST: ANY
      PRICE_UPDATE_INTERVAL: 10
      START_SLOT: LATEST
      PP_SOLANA_URL: ${PP_SOLANA_URL:-https://api.devnet.solana.com}
      PYTH_MAPPING_ACCOUNT: ${CI_PYTH_MAPPING_ACCOUNT:-BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2}
      MAX_CONFIDENCE_INTERVAL: 0.01
    hostname: airdropper
    entrypoint: ./run-airdropper.sh
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
      dbcreation:
        condition: service_completed_successfully
      faucet:
        condition: service_started

  indexer:
    container_name: indexer
    image: neonlabsorg/proxy:${REVISION}
    environment:
      SOLANA_URL: http://solana:8899
      POSTGRES_DB: neon-db
      POSTGRES_USER: neon-proxy
      POSTGRES_PASSWORD: neon-proxy-pass
      CONFIG: ci
    hostname: indexer
    depends_on:
      postgres:
        condition: service_healthy
      evm_loader:
        condition: service_completed_successfully
      dbcreation:
        condition: service_completed_successfully
    expose:
      - "8887"
    networks:
      - net
    entrypoint: proxy/run-indexer.sh

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    privileged: true
    volumes:
      - ./statistics_exporter/config/prometheus-config.yml:/etc/prometheus/prometheus-config.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus-config.yml'
    ports:
      - 127.0.0.1:9009:9090
    expose:
      - "9009"
    networks:
      - net
    depends_on:
      proxy:
        condition: service_started

networks:
  net:
