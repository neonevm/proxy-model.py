--- solana/rpc/api.py	2021-05-25 13:08:52.430148672 +0300
+++ solana/rpc/api.py	2021-05-25 13:08:43.102202173 +0300
@@ -14,7 +14,7 @@
 from solana.publickey import PublicKey
 from solana.transaction import Transaction
 
-from .commitment import Commitment, Max
+from .commitment import Commitment, Max, Confirmed
 from .providers import http
 
 
@@ -33,6 +33,11 @@
     return types.MemcmpOpts(*args, **kwargs)


+class SendTransactionError(Exception):
+    def __init__(self, result):
+        super().__init__(result['message'])
+        self.result=result
+
 class Client:  # pylint: disable=too-many-public-methods
     """Client class."""
 
@@ -328,7 +334,7 @@
 
         return self._provider.make_request(types.RPCMethod("getConfirmedSignaturesForAddress2"), account, opts)
 
-    def get_confirmed_transaction(self, tx_sig: str, encoding: str = "json") -> types.RPCResponse:
+    def get_confirmed_transaction(self, tx_sig: str, encoding: str = "json", commitment : Commitment = Confirmed) -> types.RPCResponse:
         """Returns transaction details for a confirmed transaction.
 
         :param tx_sig: Transaction signature as base-58 encoded string N encoding attempts to use program-specific
@@ -359,7 +365,7 @@
            'signatures': ['3PtGYH77LhhQqTXP4SmDVJ85hmDieWsgXCUbn14v7gYyVYPjZzygUQhTk3bSTYnfA48vCM1rmWY7zWL3j1EVKmEy']}},
          'id': 4}
         """  # noqa: E501 # pylint: disable=line-too-long
-        return self._provider.make_request(types.RPCMethod("getConfirmedTransaction"), tx_sig, encoding)
+        return self._provider.make_request(types.RPCMethod("getConfirmedTransaction"), tx_sig, {self._comm_key: commitment, self._encoding_key: encoding})
 
     def get_epoch_info(self, commitment: Commitment = Max) -> types.RPCResponse:
         """Returns information about the current epoch.
@@ -1083,6 +1089,7 @@
     def __post_send(self, resp: types.RPCResponse, skip_confirm: bool, conf_comm: Commitment) -> types.RPCResponse:
         if resp.get("error"):
             self._provider.logger.error(resp.get("error"))
+            raise SendTransactionError(resp.get("error"))
         if not resp.get("result"):
             raise Exception("Failed to send transaction")
         if skip_confirm:
--- solana/rpc/commitment.py	2021-05-25 13:09:06.898065852 +0300
+++ solana/rpc/commitment.py	2021-05-25 13:08:43.102202173 +0300
@@ -26,3 +26,5 @@
 
 Recent = Commitment("recent")
 """The node will query its most recent bank."""
+
+Confirmed = Commitment("confirmed")
\ No newline at end of file
